<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc>
  <web>ProjectsCode</web>
  <name>SuggestDisplay</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>XWiki.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1388530800000</creationDate>
  <date>1388530800000</date>
  <contentUpdateDate>1388530800000</contentUpdateDate>
  <version>1.1</version>
  <title>SuggestDisplay</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>ProjectsCode.SuggestDisplay</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>c98bbe54-64b7-4df0-a487-10c2957038d4</guid>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
  var widgets = XWiki.widgets = XWiki.widgets || {};
  // -------------------------------
  // Start USH
  // In XWiki 5.2 SuggestPicker already exists, it's created in suggestPicker already so we rename this one to SuggestDisplayPicker
  // TODO: rewrite this using the real suggest picker!
  // -------------------------------
  widgets.SuggestDisplayPicker = Class.create({
  // -------------------------------
  // End USH
  // -------------------------------
  initialize: function(element) {
    this.input = element;
    // get the referer input to pass it to the suggest script
    var suggestRefererInput = this.input.previous("input[name=" + this.input.readAttribute('name') + "Referer]");
    this.input.writeAttribute('onfocus', this.input.readAttribute('onfocus').replace(/^/, 'return this._x_suggest = '));
    var original_onfocus = this.input.onfocus;
    this.input.onfocus = function() {
      this.suggest = original_onfocus.apply(this.input);
      this.suggest.options.timeout = 5000;
      this.suggest.options.callback = this.addItem.bind(this);
      /* add the requester here, to get the suggests in context */
      if (suggestRefererInput) {
        this.suggest.options.script = this.suggest.options.script + "&amp;refererdoc=" + encodeURIComponent(suggestRefererInput.getValue()) + "&amp;";
      }
    }.bind(this);
    
    if (this.input.previous('input[type=hidden]')) {
      this.element = this.input.previous('input[type=hidden]')
    } else {
      this.element = this.setupSuggest(this.input);
    }
    
    /* get the force add button, if any. If there is one, add a click listener that adds the value in the input and an enter listener for the input */
    this.button = $(this.element.readAttribute('id') + "_addbutton");
    if (this.button) {
      this.button.observe('click', function (event) {
        this.addItem({'value' : this.input.getValue()});
      }.bindAsEventListener(this));
      
      this.input.observe('keyup', function(event) {
        var key = event.keyCode;
        switch(key) {
          case Event.KEY_RETURN:
             event.stop();
             this.addItem({'value' : this.input.getValue()});
        }
      }.bindAsEventListener(this));

      this.button.toggleClassName('hidden');
      this.input.toggleClassName('suggested-withaddbutton');
    }

    this.list = new Element('ul', {'class' : 'picker-list'});
    if (this.button) {
      this.button.insert({'after' : this.list});
    } else {
      this.input.insert({'after' : this.list});
    }

    this.prepareList();
    this.input.value = "";
  },
  
  prepareList : function() {
    var inputName = this.element.readAttribute('name');
    var valuesSelect = this.element.previous("select[name=" + inputName + "_suggestValues]");
    if (valuesSelect) {
      valuesSelect.select('option').each(function(selectedValueOption){
        if (selectedValueOption.selected) {
          this.addLi(selectedValueOption.readAttribute('label'), selectedValueOption.readAttribute('value'));
        }
      }.bind(this));
      Element.remove(valuesSelect);
    }

    // disable this element so that only values displayed in hidden inputs in the list are submitted, not the value of the suggest input too
    this.element.writeAttribute('disabled', 'disabled');
    // add an empty hidden input with the name of the prop at the end of the list, to trick the fromValue() to believe that there are more values
    // so that it doesn't parse the first value as a list value, with | as separator or some other tricky separator
    var hiddenEmptyElt = new Element('input', {'type' : 'hidden', 'name' : inputName});
    this.list.insert({'after': hiddenEmptyElt});
    
    // Create a drag and drop for the options list to be able to change order
    var listId = inputName + "_suggestPicker";
    this.list.writeAttribute('id', listId);
    // we call it here for good: even if the previous addLi's triggered it, it wouldn't have worked since the list doesn't have an id yet.
    // so how it will actually setup a sortable.
    this.setupDragDrop();
  },
  
  setupDragDrop : function() {
    var listId = this.list.readAttribute('id');
    if (listId &amp;&amp; listId != "") {
      Sortable.create(listId, {
        handle: 'picker-item', 
        overlap: 'vertical', 
        scroll: window, 
        dropOnEmpty: true, 
        constraint: false,
        ghosting: false,
        hoverclass: 'picker-item-hover-highlight',
      });
    }
  },
  
  /* Sets up the combination for the suggest to work properly, with a hidden field that keeps the keys and a visible field that holds the values */
  /* FIXME: I think this function is a bit wrong, but it's not gonna be used though, so it should be fine. */
  setupSuggest: function(input) {
    var inputName = input.readAttribute('name');
    var inputId = input.readAttribute('id');
    var hiddenInput = new Element('input', {'type' : 'hidden', 'name': inputName, 'value': input.readAttribute('value'), 'id' : inputId});
    input.insert({before : hiddenInput});
    input.writeAttribute('name', inputName + "_suggest");
    input.writeAttribute('id', inputId + "_suggest");
    
    return hiddenInput;
  },

  addItem : function(obj) {
    this.addLi(obj.info || obj.value, obj.value);
    // FIXME: this is now useless the update list. Since the element is disabled anyway, we rely on the hidden inputs added in the list elements
    this.updateList.bind(this).defer();
    return false;
  },

  addLi : function(key, value) {
    if (!key) {
      return;
    }
    var li = document.createElement("li");
    var span = new Element('span', {'title' : key}).update(value.escapeHTML());
    span.className = "picker-item";
    var hiddenInputName = this.element.readAttribute('name');
    var hiddenInput = new Element('input', {'type' : 'hidden', 'name' : hiddenInputName, 'value' : key});
    li._x_value = key;
    var img = new Element("img", {'src': "$xwiki.getSkinFile('icons/silk/cross.gif')"});
    img.observe('click', this.removeItem.bindAsEventListener(this));
    li.appendChild(span);
    li.appendChild(hiddenInput);
    li.appendChild(img);
    this.list.appendChild(li);
    
    // re-setup the list drag and drop so that the new element can also be moved
    this.setupDragDrop();
  },

  removeItem : function(event) {
    var item = event.findElement('li');
    item.remove();
    this.updateList();
  },

  updateList : function() {
    this.input.value = "";
    this.element.value = this.list.select('li').collect(function(item) { return item._x_value; }).join('|');
  }
});
  return XWiki;
}(XWiki || {}));

// -------------------------------
// Start USH
// multiple suggest is overwriting single suggest because of this each
// -------------------------------
/*document.observe('xwiki:dom:loading', function() {
  $$(".suggested").each(function(item) {    
    new XWiki.widgets.SuggestDisplayPicker(item);
  });
});*/
// -------------------------------
// End USH
// -------------------------------</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <name>ProjectsCode.SuggestDisplay</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>2f05ec20-8954-4f9a-b9bc-dd1db42da18d</guid>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>.suggested-addbutton {
  background: none;
  border: none;
  padding: 0 !important;
  line-height: normal ! important;
}

.panel input.suggested-withaddbutton {
  width: 87%;
}

.picker-list img {
  vertical-align: top; /* I don't know why top, seems to look better than middle which is too low (though it makes more sense)*/
}

ul.picker-list {
  margin-top: 0.5em;
}

ul.picker-list .picker-item {
  cursor: move;
}</code>
    </property>
    <property>
      <name>Suggest list css</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>ProjectsCode.SuggestDisplay</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>12d290c9-8362-4dec-b833-a6031aa4721b</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <levels>view</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>ProjectsCode.SuggestDisplay</name>
    <number>1</number>
    <className>XWiki.XWikiRights</className>
    <guid>1eb80ad0-a750-468e-a258-2d97b0fe5a9b</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup</groups>
    </property>
    <property>
      <levels>view</levels>
    </property>
  </object>
  <content>{{velocity}}
#set ($propertyClass = $object.getxWikiClass().get($name))
#set ($pickerId = "${prefix}${name}")
##
##
#set($needsContextualSuggest=false)
#if ($type == 'edit')
  #set($discard = $xwiki.jsfx.use("js/scriptaculous/effects.js"))
  #set($discard = $xwiki.jsfx.use("js/scriptaculous/dragdrop.js"))
  ## ---------------------------------
  ## Start Custom
  ## we load this script non-deferred because we changed the way we setup the 
  ## suggest picker (we do it in the page instead of the jsx), 
  ## so we cannot be sure anymore that the picker is defined by the time it is called in this page, 
  ## as xwiki:dom:loading is fired potentially before the loading of deferred scripts.
  ## ---------------------------------
  $xwiki.jsx.use('ProjectsCode.SuggestDisplay', {'defer' : false, 'minify' : false })
  ## ---------------------------------
  ## End Custom
  ## ---------------------------------
  $xwiki.ssx.use('ProjectsCode.SuggestDisplay', {'minify' : false})
  ## render a select with the current selection
  {{html clean="false"}}
    #if ($value.size() &gt; 0)
      &lt;select id="${pickerId}_suggestValues" name="${pickerId}_suggestValues" multiple="multiple" class="hidden"&gt;
    #end
    #foreach($k in $value)
      #if ($propertyClass.getMapValues().containsKey($k))
        #set ($v = $propertyClass.getMapValues().get($k).value)
      #else
        #set ($v = $k)
      #end
      ## ---------------------------------
      ## Start Custom
      ## users : display first name and last name instead of username
      ## ---------------------------------
      #if($isUser)
        #set($userObj = $xwiki.getDocument($v).getObject('XWiki.XWikiUsers'))
        #if($userObj)
          #set($k = $v)
          #set($v = $userObj.getProperty('first_name').value + ' ' + $userObj.getProperty('last_name').value)
        #end
      #end
      ## ---------------------------------
      ## End Custom
      ## ---------------------------------
      &lt;option label="$k" value="$v" selected="selected" /&gt;
    #end
    #if ($value.size() &gt; 0)
      &lt;/select&gt;
    #end
    ## set this variable to force the send of a requester to the suggest vm, to force the generation of the suggestions depending on the current document. Needs support in suggest.vm
    #if ($needsContextualSuggest)
      &lt;input type="hidden" name="${pickerId}_suggestReferer" value="$object.name" /&gt;
    #end
    ## now display the item in edit mode, to have the suggest and all.
   
#* 
#set($svalue = $stringtool.join($value, "|"))
    #set($surl = $xwiki.getURL("Main.WebHome", "view", "xpage=suggest&amp;classname=${object.getxWikiClass().name}&amp;fieldname=${name}&amp;firCol=list&amp;secCol=-&amp;"))
    #set($onfocus = "new ajaxSuggest(this, { script: '${surl}', varname:'input', seps:';,'} )")

    &lt;input class="suggested" id="${prefix}${name}" name="${prefix}${name}" type="text" value="${escapetool.xml($svalue)}" autocomplete="off" onfocus="${escapetool.xml($onfocus)}" /&gt;
*#
    $doc.displayEdit($propertyClass, $prefix, $object)

    ## --------------------------------
    ## Start Custom
    ## this multiple suggest feature overwrites simple select suggest
    ## -&gt; call multi suggest for current obj &amp; prop
    ## --------------------------------
    &lt;script type="text/javascript"&gt;
        document.observe('xwiki:dom:loading', function() {
          var suggestInput = $('ProjectsCode.ProjectConfig_${prefix}${name}');
          if(!suggestInput.hasClassName('suggested')) {
            suggestInput = $('ProjectsCode.ProjectConfig_${prefix}${name}_suggest');
          }
          new XWiki.widgets.SuggestDisplayPicker(suggestInput);
        });
    &lt;/script&gt;
    ## ---------------------------------
    ## End Custom
    ## ---------------------------------
    
    #if($displayAddButton)
      &lt;button id="${prefix}${name}_addbutton" class="suggested-addbutton hidden" type="button"&gt;&lt;img src="$xwiki.getSkinFile('icons/silk/add.gif')" alt="$msg.get('save')" /&gt;&lt;/button&gt;
    #end
  {{/html}}
#else
  #foreach($v in $value)
    #if ($propertyClass.getMapValues().containsKey($v))
      #set ($title = $propertyClass.getMapValues().get($v).value)
    #else
      $title
    #end
  #end
#end
{{/velocity}}
</content>
</xwikidoc>
